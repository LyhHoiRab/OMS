<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.oms.core.lottery.dao.mapper.LotteryRecordMapper">

    <sql id="WHERE_SQL">
        <where>
            <if test="params.andCriterions != null and params.andCriterions.size > 0">
                <foreach collection="params.andCriterions" item="criterion">
                    <trim prefix="AND (" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.andCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="AND">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                            <when test="criterion.orCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="OR">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>

            <if test="params.orCriterions != null and params.orCriterions.size > 0">
                <foreach collection="params.orCriterions" item="criterion">
                    <trim prefix="OR (" suffix=")">
                        <choose>
                            <when test="criterion.noValue">
                                ${criterion.property} ${criterion.operator}
                            </when>
                            <when test="criterion.singleValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                ${criterion.property} ${criterion.operator} #{criterion.value} AND #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                ${criterion.property} ${criterion.operator}
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
                                    #{item}
                                </foreach>
                            </when>
                            <when test="criterion.andCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="AND">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                            <when test="criterion.orCriterionValue">
                                <foreach collection="criterion.value" item="item" open="(" close=")" separator="OR">
                                    <trim prefix="(" suffix=")">
                                        <choose>
                                            <when test="item.noValue">
                                                ${item.property} ${item.operator}
                                            </when>
                                            <when test="item.singleValue">
                                                ${item.property} ${item.operator} #{item.value}
                                            </when>
                                            <when test="item.betweenValue">
                                                ${item.property} ${item.operator} #{item.value} AND #{item.secondValue}
                                            </when>
                                            <when test="item.listValue">
                                                ${item.property} ${item.operator}
                                                <foreach collection="item.value" item="itemValue" open="(" close=")" separator=",">
                                                    #{itemValue}
                                                </foreach>
                                            </when>
                                        </choose>
                                    </trim>
                                </foreach>
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </if>
        </where>
    </sql>

    <resultMap id="record" type="com.oms.core.lottery.entity.LotteryRecord">
        <id     column="id"             property="id"           javaType="java.lang.String"/>
        <result column="lottery_id"     property="lotteryId"    javaType="java.lang.String"/>
        <result column="open_id"        property="openId"       javaType="java.lang.String"/>
        <result column="nickname"       property="nickname"     javaType="java.lang.String"/>
        <result column="head_img_url"   property="headImgUrl"   javaType="java.lang.String"/>
        <result column="is_cash"        property="isCash"       javaType="java.lang.Boolean"/>
        <result column="cash_time"      property="cashTime"     javaType="java.util.Date"/>
        <result column="create_time"    property="createTime"   javaType="java.util.Date"/>
        <result column="update_time"    property="updateTime"   javaType="java.util.Date"/>
        <association property="present" columnPrefix="p_"       resultMap="present"/>
    </resultMap>

    <resultMap id="present" type="com.oms.core.lottery.entity.Present">
        <id     column="id"             property="id"           javaType="java.lang.String"/>
        <result column="lottery_id"     property="lotteryId"    javaType="java.lang.String"/>
        <result column="description"    property="description"  javaType="java.lang.String"/>
        <result column="serial"         property="serial"       javaType="java.lang.Integer"/>
    </resultMap>

    <insert id="save">
      INSERT
        INTO lottery_record (
             id,
             lottery_id,
             present_id,
             open_id,
             nickname,
             head_img_url,
             is_cash,
             cash_time,
             create_time
        ) VALUE (
             #{id,          jdbcType=VARCHAR},
             #{lotteryId,   jdbcType=VARCHAR},
             #{present.id,  jdbcType=VARCHAR},
             #{openId,      jdbcType=VARCHAR},
             #{nickname,    jdbcType=VARCHAR},
             #{headImgUrl,  jdbcType=VARCHAR},
             #{isCash,      jdbcType=BOOLEAN},
             #{cashTime,    jdbcType=TIMESTAMP},
             #{createTime,  jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="update">
        UPDATE lottery_record
         <set>
            <if test="isCash != null">
                is_cash = #{isCash, jdbcType=BOOLEAN},
            </if>
            <if test="cashTime != null">
                cash_time = #{cashTime, jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime, jdbcType=TIMESTAMP},
            </if>
         </set>
          WHERE id = #{id}
    </update>

    <select id="get" resultMap="record">
        SELECT l.*,
               p.id          AS p_id,
               p.lottery_id  AS p_lottery_id,
               p.description AS p_description,
               p.serial      AS p_serial
          FROM lottery_record
     LEFT JOIN present p
            ON l.present_id = p.id
        <if test="params != null">
            <include refid="WHERE_SQL"/>
        </if>
    </select>

    <select id="find" resultMap="record">
        SELECT l.*,
               p.id          AS p_id,
               p.lottery_id  AS p_lottery_id,
               p.description AS p_description,
               p.serial      AS p_serial
          FROM lottery_record
     LEFT JOIN present p
            ON l.present_id = p.id
        <if test="params != null">
            <include refid="WHERE_SQL"/>

            <if test="params.sorts != null and params.sorts.size > 0">
                ORDER BY
                <foreach collection="params.sorts" item="sort" separator=",">
                    ${sort.property} ${sort.operator}
                </foreach>
            </if>

            <if test="params.limit != null">
                ${params.limit.operator} ${params.limit.value}, ${params.limit.secondValue}
            </if>
        </if>
    </select>

    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*)
          FROM lottery_record
        <if test="params != null">
            <include refid="WHERE_SQL"/>
        </if>
    </select>
</mapper>